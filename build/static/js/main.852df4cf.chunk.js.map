{"version":3,"sources":["component/Source.jsx","component/Download.jsx","Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","SourceImgs","state","previewVisible","previewImage","handleCancel","_this","setState","handlePreview","_callee","regenerator_default","a","wrap","_context","prev","next","url","preview","originFileObj","sent","stop","handleChange","_ref2","fileList","props","onListChange","_this$state","this","uploadButton","react","icon","type","className","upload","action","listType","onPreview","onChange","length","modal","visible","footer","onCancel","alt","style","width","src","React","Download","handleDownload","genImg","_this$props","qrFileList","w","h","r","b","newImg","qrFile","newQR","downloadTag","abrupt","Image","$canvas","height","$ctx","drawImage","x","y","toDataURL","document","createElement","download","href","body","appendChild","click","remove","getElementById","getContext","_this2","_this$props2","id","input_number","defaultValue","min","max","formatter","value","concat","parser","replace","handleConfigChange","es_button","shape","onClick","Header","Layout","Content","Footer","Main","handleSourceChange","_ref","handleImgUrlChange","console","info","Object","defineProperty","layout","background","padding","margin","position","minHeight","page_header","title","Source_SourceImgs","Download_Download","textAlign","App","react_default","Layout_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.852df4cf.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Upload, Icon, Modal } from 'antd';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class SourceImgs extends React.Component {\n  state = {\n    previewVisible: false,\n    previewImage: ''\n  };\n\n  handleCancel = () => this.setState({ previewVisible: false });\n\n  handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    this.setState({\n      previewImage: file.url || file.preview,\n      previewVisible: true,\n    });\n  };\n\n  handleChange = ({ fileList }) => this.props.onListChange({ fileList });\n\n  render() {\n    const { previewVisible, previewImage } = this.state;\n    const { fileList } = this.props;\n    const uploadButton = (\n      <div>\n        <Icon type=\"plus\" />\n        <div className=\"ant-upload-text\">Upload</div>\n      </div>\n    );\n    return (\n      <div className=\"clearfix source-holder\">\n        <Upload\n          action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n          listType=\"picture-card\"\n          fileList={fileList}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {fileList.length >= 1 ? null : uploadButton}\n        </Upload>\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}","import * as React from 'react';\nimport { Button, InputNumber } from 'antd';\n\nfunction getBase64(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = error => reject(error);\n  });\n}\n\nexport default class Download extends React.Component {\n\n\n\n\n  handleDownload = () => {\n    this.genImg()\n  }\n\n  genImg = async () => {\n    const { fileList, qrFileList, w, h, r, b } = this.props;\n    if (fileList.length === 0 || qrFileList.length === 0) return;\n\n    const file = fileList[0];\n    const newImg = new Image();\n    newImg.src = await getBase64(file.originFileObj);\n    newImg.onload = () => {\n      this.$canvas.width = newImg.width;\n      this.$canvas.height = newImg.height;\n      this.$ctx.drawImage(newImg, 0, 0);\n    }\n    const qrFile = qrFileList[0];\n    const newQR = new Image();\n    newQR.src = await getBase64(qrFile.originFileObj);\n    newQR.onload = () => {\n      const x = newImg.width - w - r;\n      const y = newImg.height - h - b;\n      this.$ctx.drawImage(newQR, x, y, w, h);\n    }\n    const url = this.$canvas.toDataURL(\"image/png\");\n    const downloadTag = document.createElement(\"a\");\n    downloadTag.download = '';\n    downloadTag.href = url;\n    document.body.appendChild(downloadTag);\n    downloadTag.click();\n    downloadTag.remove();\n  }\n\n  componentDidMount() {\n    this.$canvas = document.getElementById('rqqCanvas');\n    this.$ctx = this.$canvas.getContext('2d');\n  }\n\n\n  render() {\n    const { w, h, r, b } = this.props;\n    return (\n      <>\n        <canvas className=\"canvas-holder\" id=\"rqqCanvas\"></canvas>\n        <div>\n          <div className=\"config-holder\">\n            <span>二维码长度</span>\n            <InputNumber\n              defaultValue={w}\n              min={0}\n              max={1000}\n              formatter={value => `${value}px`}\n              parser={value => value.replace('px', '')}\n              onChange={value => { this.props.handleConfigChange('w', value) }}\n            />\n          </div>\n          <div className=\"config-holder\">\n            <span>二维码宽度</span>\n            <InputNumber\n              defaultValue={h}\n              min={0}\n              max={1000}\n              formatter={value => `${value}px`}\n              parser={value => value.replace('px', '')}\n              onChange={value => { this.props.handleConfigChange('h', value) }}\n            />\n          </div>\n          <div className=\"config-holder\">\n            <span>二维码到右侧的边距</span>\n            <InputNumber\n              defaultValue={r}\n              min={0}\n              max={1000}\n              formatter={value => `${value}px`}\n              parser={value => value.replace('px', '')}\n              onChange={value => { this.props.handleConfigChange('r', value) }}\n            />\n          </div>\n          <div className=\"config-holder\">\n            <span>二维码到底部的边距</span>\n            <InputNumber\n              defaultValue={b}\n              min={0}\n              max={1000}\n              formatter={value => `${value}px`}\n              parser={value => value.replace('px', '')}\n              onChange={value => { this.props.handleConfigChange('b', value) }}\n            />\n          </div>\n        </div>\n\n        <Button type=\"primary\" shape=\"round\" icon=\"download\" onClick={this.handleDownload}>\n          Download\n        </Button>\n      </>\n    )\n  }\n}","import * as React from 'react';\nimport { Layout, PageHeader } from 'antd';\nimport Source from './component/Source';\nimport Download from './component/Download';\n\nconst { Header, Content, Footer } = Layout;\n\n\nexport default class Main extends React.Component {\n\n  state = {\n    fileList: [],\n    qrFileList: [],\n    w: 100,\n    h: 100,\n    r: 10,\n    b: 10\n  }\n\n  handleSourceChange = ({ fileList }) => {\n    this.setState({ fileList })\n  }\n\n  handleImgUrlChange = ({ fileList }) => {\n    this.setState({ qrFileList: fileList })\n  }\n\n  handleConfigChange = (type, value) => {\n    console.info(type, value)\n    this.setState({ [type]: value })\n  } \n\n  render() {\n    const { fileList, qrFileList, w, h, r, b } = this.state;\n\n    return (\n      <Layout className='rqq-main-holder'>\n        <Header style={{ background: '#fff', padding: 0 }} />\n        <Content style={{ margin: '24px 16px 0' }}>\n          <div style={{ padding: 24, background: '#fff', height: '100%', position: 'relative', minHeight: 484 }}>\n            <PageHeader title=\"待处理图片\" />\n            <Source fileList={fileList} onListChange={this.handleSourceChange} />\n            <PageHeader title=\"QR code\" />\n            <Source fileList={qrFileList} onListChange={this.handleImgUrlChange} />\n            <div className=\"download-holder\">\n              <Download fileList={fileList} qrFileList={qrFileList} w={w} h={h} r={r} b={b} handleConfigChange={this.handleConfigChange} />\n            </div>\n          </div>\n\n        </Content>\n        <Footer style={{ textAlign: 'center' }}> ©2019 Created by Rqq</Footer>\n      </Layout>\n    )\n  }\n}","import React from 'react';\nimport Main from './Layout';\nimport Source from './component/Source';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}